<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>テスト駆動開発 on ヨット逆走テック</title>
    <link>https://gagagal.github.io/hugo-techblog/tags/%E3%83%86%E3%82%B9%E3%83%88%E9%A7%86%E5%8B%95%E9%96%8B%E7%99%BA/</link>
    <description>Recent content in テスト駆動開発 on ヨット逆走テック</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <lastBuildDate>Thu, 13 May 2021 22:12:03 +0000</lastBuildDate><atom:link href="https://gagagal.github.io/hugo-techblog/tags/%E3%83%86%E3%82%B9%E3%83%88%E9%A7%86%E5%8B%95%E9%96%8B%E7%99%BA/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>『テスト駆動開発』のエッセンシャル</title>
      <link>https://gagagal.github.io/hugo-techblog/portfolio/post4/</link>
      <pubDate>Thu, 13 May 2021 22:12:03 +0000</pubDate>
      
      <guid>https://gagagal.github.io/hugo-techblog/portfolio/post4/</guid>
      <description>テスト駆動開発の手法  やることをTODOリストに書き出す(これは随時思いつき次第追加していく) 小さいテストを一つ書く 全てのテストを実行し、先程の一つだけが失敗することを確認する コンパイルエラーを通す テストを通すための最小限の変更を行い、全てのテストが成功することを確認する リファクタリングを行い重複を除去する  テスト駆動開発の心得  細かいステップを踏み続けられるようにする TDDの三つの戦略  仮実装 &amp;hellip; コードでまずベタ書きの値をつかい、実装を進めるに従って徐々に変数に置き換えていく 明白な実装 &amp;hellip; すぐに頭の中の実装をコードに落とす 三角測量 &amp;hellip; 既存のコードに二つ目の実例を追加する(trueを確かめるものがあればfalseを吐き出すもの、など)    </description>
    </item>
    
  </channel>
</rss>
